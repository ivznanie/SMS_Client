Attribute VB_Name = "Module01"
'======================================================================================================================================================
'============================МОДУЛЬ ОПРЕДЕЛЕНИЯ ОБЩИХ КОНСТАНТ, ПЕРЕМЕННЫХ, ИНИЦИАЛИЗАЦИИ КНИГИ, ДЕИНИЦИАЛИЗАЦИИ КНИГИ=================================
'======================================================================================================================================================


'===================================================================КОНСТАНТЫ==========================================================================

Public Const СтрокаЗапрещенныхВхожденийВТекстСообщения = "ERROR:" 'через пробел, перечисление

Public Const ВсеГотовоКРаботе = "Все готово к работе!", ПроверкаГотовностиСистемы = "Выполняется проверка готовности системы..."

Public Const СообщениеКПринудительномуОбновлению = "Срок даты обновления наступил, необходимо использовать новую версию."
Public Const СообщениеКРекомендованномуОбновлению = "Рекомендуется использовать новую версию, так как текущая может работать с ограничениями."
Public Const СообщениеКОбновлениюПослеУказаннойДаты = "Использовать новую версию можно только после указанной даты."

'===================================================================ПЕРЕМЕННЫЕ=========================================================================

Public URL_Version, URL_Status, URL_Password, URL_Balance, URL_SendSMS, URL_StatusSMS, URL_Root  'URL API веб-сервиса

Public ТелНомера(), ФИОы(), Примечания(), Пароль, Логин, Админ, ЗакреплениеРежимаАдминистратора, РежимОтладки, РежимаАдминистратора

Public ApplicationUndo, ВключитьМакросы, ВключитьДовериеКОбъектнойМоделиVBA, ДеинициализацияКниги, ПрежнееЗначение, URLДляСкачиванияКлиента


'==================================================================ИНИЦИАЛИЗАЦИЯ=======================================================================

Sub Инициализация() 'процедура инициализации книги при запуске
    Инициализация_
End Sub


Sub Инициализация_()
    On Error GoTo er
        
    If Not ЧтениеНастроек Then Exit Sub Else УстановкаДоверияКМакросам
    
    Call ПрименениеИнтерфейсаПользователя: If Not ПроверкаГотовности(True) Then Exit Sub  'проверка готовности веб-сервиса к работе
        
    Exit Sub
er:
    MsgBox "Ошибка процедуры инициализации!" & ": " & Err.Source & ": " & Err.Number & ": " & Err.Description, vbCritical
End Sub

 
    Sub УстановкаДоверияКМакросам()
        On Error Resume Next
        
        Путь = "HKEY_CURRENT_USER\Software\Microsoft\Office\" & Application.Version & "\Excel\Security\"
     
        Set WshShell = CreateObject("WScript.Shell"): If Err.Number <> 0 Then Exit Sub
        
        With WshShell
            Значение = .RegRead(Путь & "VBAWarnings") 'проверка уровня безопасности макросов
            
            If ВключитьМакросы And Значение <> "1" Then
'                If MsgBox("Внимание! Для работы макросов необходимо разрешить их выполнение в Excel. Макросы необходимы для работы программного обеспечения. " & p(2) & _
'                          "Нажмите Да, если впредь вы разрешаете их выполнение или Нет в случае отказа.", vbQuestion + vbYesNo) = vbYes Then

                    .RegWrite Путь & "VBAWarnings", 1, "REG_DWORD": If Err.Number = 0 Then ТребованиеПерезапускаКниги = True Else Ошибка = True
'                End If
            End If
            
            Значение = .RegRead(Путь & "AccessVBOM") 'проверка программного доступа к объектной модели проекта VBA
         
            If ВключитьДовериеКОбъектнойМоделиVBA And Значение <> "1" Then
'                If MsgBox("Внимание! Для работы макросов необходимо разрешить доступ к объектной модели проекта VBA (Excel). Макросы необходимы для работы программного обеспечения. " & p(2) & _
'                          "Нажмите Да, если впредь вы разрешаете доступ или Нет в случае отказа.", vbQuestion + vbYesNo) = vbYes Then
            
                    .RegWrite Путь & "AccessVBOM", 1, "REG_DWORD": If Err.Number = 0 Then ТребованиеПерезапускаКниги = True Else Ошибка = True
'                End If
            End If
            
            'If ТребованиеПерезапускаКниги And Not Ошибка Then MsgBox "Для применения настроек книга будет закрыта, откройте ее снова для работы.", vbInformation: ThisWorkbook.Close 0
        End With
        
        If Ошибка Then _
            MsgBox "Внимание! Excel пытался включить доверие к макросам и объектной модели согласно настройкам книги, но у него, похоже, это не получилось. Попытайтесь сделать это вручную." & p(3) & _
                   "Для этого: " & p(2) & "1. Перейдите в меню Excel:" & p(1) & "    а) Кликните Центр управления безопасностью" & p(1) & "    б) Кликните Параметры центра управления безопасностью" & p(1) & _
                   "    в) Кликните Параметры макросов" & p(2) & "2. Выберите опцию: 'Включить все макросы' [последний пункт]" & p(2) & "3. Установите галочку: Доверять доступ " & _
                   "к объектной модели проектов VBA" & p(2) & "4. Закройте Excel и запустите файл заново", vbExclamation
    End Sub


    Function ПроверкаГотовности(Optional Приветствие = False)
        On Error GoTo er
        
        If Приветствие Then СообщениеСтатуса ПроверкаГотовностиСистемы, "", 1
        
        If Not СтатусГотовности(ПроверкаТехОбслуживанияСервиса, Приветствие) Then Exit Function
        If Not СтатусГотовности(ПроверкаВерсииСервиса, Приветствие) Then Exit Function
                
        ПроверкаГотовности = True: If Приветствие Then СообщениеСтатуса ВсеГотовоКРаботе, "" 'после успешного прохождения всех проверок
        
        Exit Function
er:
        MsgBox "Ошибка проверки состояния системы!" & ": " & Err.Source & ": " & Err.Number & ": " & Err.Description, vbCritical
    End Function
    
        
        Function СтатусГотовности(ТекстСообщенияСтатуса, Приветствие)
            On Error GoTo er
            
            If ТекстСообщенияСтатуса = "ok" Then: СтатусГотовности = True: Exit Function
            
            Dim reg As Object, math As Object: Set reg = CreateObject("vbscript.regexp")

            ВажностьСтатуса = 2 'красный по умолчанию
            
            If InStr(ТекстСообщенияСтатуса, СообщениеКРекомендованномуОбновлению) > 0 Or InStr(ТекстСообщенияСтатуса, СообщениеКОбновлениюПослеУказаннойДаты) > 0 Then _
                ВажностьСтатуса = 1 Else If InStr(ТекстСообщенияСтатуса, СообщениеКПринудительномуОбновлению) > 0 Then ВажностьСтатуса = 2 'принудительно
                
            reg.Pattern = "((http://)|(https://)|(ftp://))\S+": Set math = reg.Execute(ТекстСообщенияСтатуса):  If math.Count = 1 Then URL = math(0).value

            If Приветствие Then СообщениеСтатуса ТекстСообщенияСтатуса, URL, ВажностьСтатуса Else If ВажностьСтатуса = 2 Then MsgBox ТекстСообщенияСтатуса, IIf(ВажностьСтатуса = 2, vbCritical, vbExclamation)
        
            If ВажностьСтатуса <> 2 Then СтатусГотовности = True
        
            Exit Function
er:
            MsgBox "Ошибка проверки статуса готовности!" & ": " & Err.Source & ": " & Err.Number & ": " & Err.Description, vbCritical
        End Function


        Function ПроверкаТехОбслуживанияСервиса() As String
            On Error GoTo er
            
            Ответ = Trim(GetHTTPResponse(URL_Status)): Ошибка = ПроверкаОшибкиЗапроса(Ответ): If Ошибка <> "ok" Then ПроверкаТехОбслуживанияСервиса = Ошибка: Exit Function 'ошибка запроса
        
            If Left(Ответ, 2) = "1:" Then ПроверкаТехОбслуживанияСервиса = Right(Ответ, Len(Ответ) - 2) & p(2) & "Попробуйте зайти позже...": Exit Function 'в режиме техобслуживания
            
            ПроверкаТехОбслуживанияСервиса = "ok"
            
            Exit Function
er:
            MsgBox "Ошибка проверки готовности сервиса!" & ": " & Err.Source & ": " & Err.Number & ": " & Err.Description, vbCritical
        End Function
 
 
        Function ПроверкаВерсииСервиса() As String
            On Error GoTo er
                
            Dim reg As Object, math As Object, i: Set reg = CreateObject("vbscript.regexp")
            
            Ответ = Trim(GetHTTPResponse(URL_Version)): Ошибка = ПроверкаОшибкиЗапроса(Ответ): If Ошибка <> "ok" Then ПроверкаВерсииСервиса = Ошибка: Exit Function 'ошибка запроса
            
            If InStr(Ответ, "&") > 0 Then
                ЧастиОтвета = Split(Ответ, "&"): If UBound(ЧастиОтвета) - LBound(ЧастиОтвета) + 1 <> 3 Then ПроверкаВерсииСервиса = "WEB-сервис предоставил некорректный формат строки  версии": Exit Function
                
                ВерсияСервиса = ЧастиОтвета(0): URLДляСкачиванияКлиента = Trim(ЧастиОтвета(КодКлиента))
            Else
                ВерсияСервиса = Ответ
            End If
            
            reg.Pattern = "^\d+\.\d+\.\d+\.\d+$": Set math = reg.Execute(ВерсияСервиса): If math.Count = 0 Then ПроверкаВерсииСервиса = "WEB-сервис предоставил некорректный формат значения своей версии: [" & ВерсияСервиса & "] Требуется в формате: А.Б.В.Г": Exit Function
            
            mst = Split(ВерсияСервиса, "."): ВерсияСервиса123 = mst(LBound(mst)) & "." & mst(LBound(mst) + 1) & "." & mst(LBound(mst) + 2)
            
            mst = Split(ВерсияКлиента, "."): ВерсияКлиента123 = mst(LBound(mst)) & "." & mst(LBound(mst) + 1) & "." & mst(LBound(mst) + 2)
            
            If ВерсияСервиса123 <> ВерсияКлиента123 Then
                ПроверкаВерсииСервиса = "Версия книги Excel не соответствует версии WEB-сервиса: требуется версия " & ВерсияСервиса123 & ".X "
                
                If URLДляСкачиванияКлиента <> "" Then ПроверкаВерсииСервиса = ПроверкаВерсииСервиса & p(2) & "Путь для скачивания: " & URLДляСкачиванияКлиента
                
                Exit Function
            Else
                Ответ = Trim(GetHTTPResponse(URL_Status)): Ошибка = ПроверкаОшибкиЗапроса(Ответ): If Ошибка <> "ok" Then ПроверкаВерсииСервиса = Ошибка: Exit Function 'ошибка запроса
                
                If Left(Ответ, 2) <> "0:" Then
                    'пример ответа:   2.1:http://tos37.ru/sms/download/sms_1.0.1.0.xlsm:1.0.1.0&2.2:http://tos37.ru/sms/download/sms_dict_1.0.1.0.xlsm:1.0.1.0:16.11.2017
                    
                    reg.Pattern = "^2\.1:.+&2\.2:.+$": Set math = reg.Execute(Ответ): If math.Count = 0 Then ПроверкаВерсииСервиса = "WEB-сервис предоставил некорректный формат статуса"
                    
                    ОтветДляКодаКлиента = Split(Ответ, "&")(КодКлиента - 1):  ОтветБезНомераСтатуса = Trim(Right(ОтветДляКодаКлиента, Len(ОтветДляКодаКлиента) - InStr(ОтветДляКодаКлиента, ":")))
                    
                    URLДляСкачиванияКлиента = Trim(Left(ОтветБезНомераСтатуса, InStr(ОтветБезНомераСтатуса, "xlsm") + 3)): ОтветБезНомераСтатусаИURL = Replace(ОтветБезНомераСтатуса, URLДляСкачиванияКлиента & ":", "")
                    
                    If InStr(ОтветБезНомераСтатусаИURL, ":") > 0 Then
                        ВерсияКлиентаДляСкачивания = Trim(Split(ОтветБезНомераСтатусаИURL, ":")(0)): ДатаОбновленияКлиента = Replace(Trim(Split(ОтветБезНомераСтатусаИURL, ":")(1)), "-", ".")
                    Else
                        ВерсияКлиентаДляСкачивания = ОтветБезНомераСтатусаИURL
                    End If
                    
                    reg.Pattern = "^\d+\.\d+\.\d+\.\d+$":  Set math = reg.Execute(ВерсияКлиентаДляСкачивания): If math.Count = 0 Then ПроверкаВерсииСервиса = "WEB-сервис предоставил некорректный формат версии книги Excel для скачивания: [" & ВерсияКлиентаДляСкачивания & "] Требуется в формате: А.Б.В.Г": Exit Function
                    
                    mst = Split(ВерсияКлиентаДляСкачивания, "."): ВерсияКлиентаДляСкачивания3p4 = mst(LBound(mst) + 2) + mst(LBound(mst) + 3)
                    
                    mst = Split(ВерсияКлиента, "."): ВерсияКлиента3p4 = mst(LBound(mst) + 2) + mst(LBound(mst) + 3): НоваяВерсияКлиента123 = mst(LBound(mst)) & "." & mst(LBound(mst) + 1) & "." & mst(LBound(mst) + 2)
                    
                    If CInt(ВерсияКлиента3p4) < CInt(ВерсияКлиентаДляСкачивания3p4) Then
                        ПроверкаВерсииСервиса = "Вышло обновление книги Excel, версия " & ВерсияКлиентаДляСкачивания & p(2) & "Путь для скачивания: " & URLДляСкачиванияКлиента
                    
                        If ДатаОбновленияКлиента <> "" Then
                            If Not IsDate(ДатаОбновленияКлиента) Then ДатаОбновленияКлиента = ПроверкаВерсииСервиса & p(2) & "Дата обновления книги Excel в статусе некорректна: [" & Split(ОтветБезНомераСтатусаИURL, ":")(1) & "] Требуется в формате: ДД.ММ.ГГГГ": Exit Function
                    
                            If CDate(ДатаОбновленияКлиента) < Now Then ПроверкаВерсииСервиса = ПроверкаВерсииСервиса & p(2) & СообщениеКПринудительномуОбновлению: Exit Function
                        End If
                        
                        If ВерсияСервиса123 = НоваяВерсияКлиента123 Then Сообщение = СообщениеКРекомендованномуОбновлению Else Сообщение = СообщениеКОбновлениюПослеУказаннойДаты
                        
                        If Сообщение = СообщениеКОбновлениюПослеУказаннойДаты And ДатаОбновленияКлиента = "" Then ПроверкаВерсииСервиса = "Не указана дата обновления новой версии книги Excel, после которой использование текущей версии будет недопустимо": Exit Function
                        
                        ПроверкаВерсииСервиса = ПроверкаВерсииСервиса & p(2) & IIf(ДатаОбновленияКлиента <> "", "Дата обновления книги Excel " & ДатаОбновленияКлиента & p(2), "") & Сообщение: Exit Function
                    End If
                End If
            End If
            
            ПроверкаВерсииСервиса = "ok"
            
            Exit Function
er:
            MsgBox "Ошибка проверки версии или статуса сервиса!" & ": " & Err.Source & ": " & Err.Number & ": " & Err.Description, vbCritical
        End Function


        Sub СообщениеСтатуса(Текст, URL, Optional Статус = 0) 'Статус = 0 (ок), 1 (предупреждение), 2 (ошибка)
            On Error GoTo er
            
            If Текст = "" Then Exit Sub
            
            Select Case Статус
                Case 0: Цвет = RGB(0, 255, 0): Case 1: Цвет = RGB(180, 180, 0): Case 2: Цвет = RGB(255, 0, 0)
            End Select
            
            With Sheets("Приветствие")
                Set Ячейка = .Range("a6"): If Not Ячейка.value = ПроверкаГотовностиСистемы And Текст = ВсеГотовоКРаботе Then Exit Sub
                
                pr "Приветствие", 0
                
                Ячейка.ClearContents: Ячейка.Font.Underline = xlUnderlineStyleNone: If URL <> "" Then .Hyperlinks.Add Anchor:=Ячейка, Address:=URL
                
                Ячейка.value = Текст: Ячейка.Font.Color = Цвет

                pr "Приветствие"
            End With
        
            Exit Sub
er:
            'if Err.Number<>0 then MsgBox "Ошибка установки статуса!" & ": " & Err.Source & ": " & Err.Number & ": " & Err.Description, vbExclamation
        End Sub


'=================================================================ДЕИНИЦИАЛИЗАЦИЯ======================================================================

Sub Деинициализация() 'процедура деинициализации книги при закрытии
    Деинициализация_
End Sub


Sub Деинициализация_() 'процедура деинициализации книги при закрытии
    On Error Resume Next
    
    ДеинициализацияКниги = True
    
    Application.DisplayAlerts = False
    
    ТекстОтключенныхМакросов = "Внимание! Если вы видите это сообщение, значит необходимо включить макросы, для этого сделайте следующее. " & _
                               "Если вы видите строку предупреждения системы безопасности (под панелью инструментов Excel) - следуйте к п.1, иначе следуйте к п.2:" & p2(2) & _
                               "1. Нажмите на кнопку 'Параметры' в строке предупреждения системы безопасности" & p2(1) & _
                               "1.1. В открывшемся окне выберите опцию 'Включить это содержимое'" & p2(1) & _
                               "1.2. Перезапустите Книгу" & p2(2) & _
                               "2. Перейдите: Меню -> Центр управления безопасностью -> Параметры центра управления безопасностью -> Параметры макросов" & p2(1) & _
                               "2.1. Выберите опцию: 'Включить все макросы' [последний пункт]" & p2(1) & _
                               "2.2. Установите галочку: 'Доверять доступ к объектной модели проектов VBA'" & p2(1) & _
                               "2.3. Перезапустите Книгу"
    
    СообщениеСтатуса ТекстОтключенныхМакросов, "", 2
                               
    ПрименениеИнтерфейсаПользователя
    
    ThisWorkbook.Save

    Application.DisplayAlerts = True
End Sub





'====================================================================ИНТЕРФЕЙСЫ=========================================================================

Sub ПрименениеИнтерфейсаПользователя()
    On Error Resume Next
    
    Сегодня = Format(Date, "dd.mm.yyyy"): ПрежнееЗначение = Сегодня: Sheets("Журнал рассылки").Range("c3").value = Сегодня
    
    Sheets("Приветствие").Activate
End Sub

















